{"ast":null,"code":"var _jsxFileName = \"/Users/zemeiwang/Downloads/react/movies-app/client/src/pages/MoviesList.jsx\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport api from '../api';\nimport styled from 'styled-components'; //import 'react-table/react-table.css'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n\nclass UpdateMovie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateUser = event => {\n      event.preventDefault();\n      window.location.href = `/movies/update/${this.props.id}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Update, {\n      onClick: this.updateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }, \"Update\");\n  }\n\n}\n\nclass DeleteMovie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteUser = event => {\n      event.preventDefault();\n\n      if (window.confirm(`Do tou want to delete the movie ${this.props.id} permanently?`)) {\n        api.deleteMovieById(this.props.id);\n        window.location.reload();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Delete, {\n      onClick: this.deleteUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    }, \"Delete\");\n  }\n\n}\n\nclass MoviesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllMovies().then(movies => {\n        this.setState({\n          movies: movies.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      movies: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      movies,\n      isLoading\n    } = this.state;\n    console.log('TCL: MoviesList -> render -> movies', movies);\n    const columns = [{\n      Header: 'ID',\n      accessor: '_id',\n      filterable: true\n    }, {\n      Header: 'Name',\n      accessor: 'name',\n      filterable: true\n    }, {\n      Header: 'Rating',\n      accessor: 'rating',\n      filterable: true\n    }, {\n      Header: 'Time',\n      accessor: 'time' // Cell: props => <span>{props.value.join(' / ')}</span>,\n\n    }, {\n      Header: '',\n      accessor: '' // Cell: function(props) {\n      //     return (\n      //         <span>\n      //             <DeleteMovie id={props.original._id} />\n      //         </span>\n      //     )\n      // },\n\n    }, {\n      Header: '',\n      accessor: '' // Cell: function(props) {\n      //     return (\n      //         <span>\n      //             <UpdateMovie id={props.original._id} />\n      //         </span>\n      //     )\n      // },\n\n    }];\n    let showTable = true;\n\n    if (!movies.length) {\n      showTable = false;\n    }\n\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, showTable && /*#__PURE__*/React.createElement(ReactTable, {\n      data: movies,\n      columns: columns,\n      loading: isLoading,\n      defaultPageSize: 10,\n      showPageSizeOptions: true,\n      minRows: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["/Users/zemeiwang/Downloads/react/movies-app/client/src/pages/MoviesList.jsx"],"names":["React","Component","ReactTable","api","styled","Wrapper","div","Update","Delete","UpdateMovie","updateUser","event","preventDefault","window","location","href","props","id","render","DeleteMovie","deleteUser","confirm","deleteMovieById","reload","MoviesList","constructor","componentDidMount","setState","isLoading","getAllMovies","then","movies","data","state","columns","console","log","Header","accessor","filterable","showTable","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactTable from 'react-table'\nimport api from '../api'\n\nimport styled from 'styled-components'\n\n//import 'react-table/react-table.css'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`\n\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`\n\nclass UpdateMovie extends Component {\n    updateUser = event => {\n        event.preventDefault()\n\n        window.location.href = `/movies/update/${this.props.id}`\n    }\n\n    render() {\n        return <Update onClick={this.updateUser}>Update</Update>\n    }\n}\n\nclass DeleteMovie extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do tou want to delete the movie ${this.props.id} permanently?`,\n            )\n        ) {\n            api.deleteMovieById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n\nclass MoviesList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            movies: [],\n            columns: [],\n            isLoading: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.getAllMovies().then(movies => {\n            this.setState({\n                movies: movies.data.data,\n                isLoading: false,\n            })\n        })\n    }\n\n    render() {\n        const { movies, isLoading } = this.state\n        console.log('TCL: MoviesList -> render -> movies', movies)\n\n        const columns = [\n            {\n                Header: 'ID',\n                accessor: '_id',\n                filterable: true,\n            },\n            {\n                Header: 'Name',\n                accessor: 'name',\n                filterable: true,\n            },\n            {\n                Header: 'Rating',\n                accessor: 'rating',\n                filterable: true,\n            },\n            {\n                Header: 'Time',\n                accessor: 'time',\n               // Cell: props => <span>{props.value.join(' / ')}</span>,\n            },\n            {\n                Header: '',\n                accessor: '',\n                // Cell: function(props) {\n                //     return (\n                //         <span>\n                //             <DeleteMovie id={props.original._id} />\n                //         </span>\n                //     )\n                // },\n            },\n            {\n                Header: '',\n                accessor: '',\n                // Cell: function(props) {\n                //     return (\n                //         <span>\n                //             <UpdateMovie id={props.original._id} />\n                //         </span>\n                //     )\n                // },\n            },\n        ]\n\n        let showTable = true\n        if (!movies.length) {\n            showTable = false\n        }\n\n        return (\n            <Wrapper>\n                {showTable && (\n                    <ReactTable\n                        data={movies}\n                        columns={columns}\n                        loading={isLoading}\n                        defaultPageSize={10}\n                        showPageSizeOptions={true}\n                        minRows={0}\n                    />\n                )}\n            </Wrapper>\n        )\n    }\n}\n\nexport default MoviesList"]},"metadata":{},"sourceType":"module"}